name: Main

env:
  context: './'
  cache-name: cache-release
  NPM_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
  node-version: 16.x

on:
  push:
    branches:
      - v2/main
    paths:
      - 'packages/**'

jobs:
  prepare:
    uses: micro-lc/micro-lc/.github/workflows/prepare.yml@v2/main

  checks:
    needs:
      - prepare
    uses: micro-lc/micro-lc/.github/workflows/checks.yml@v2/main

  tests:
    needs:
      - prepare
    strategy:
      fail-fast: false
      matrix:
        package:
          - composer
          - iconic
          - interfaces
          - layout
          - orchestrator
    uses: micro-lc/micro-lc/.github/workflows/tests.yml@v2/main
    with:
      package: ${{ matrix.package }}
    secrets:
      token: ${{ secrets.GITHUB_TOKEN }}

  release-docker:
    needs:
      - tests
      - checks
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/heads/main') }}

    steps:
      - uses: actions/checkout@v3

      - name: Build Cache
        uses: actions/cache@v3
        id: build-cache
        with:
          path: |
            ./packages/orchestrator/dist
          key: ${{ runner.os }}-main-build-${{ github.sha }}

      - name: Prepare
        id: prepare-docker-container
        run: |
          DOCKER_IMAGE=microlc/micro-lc
          echo "tag=${DOCKER_IMAGE}:latest" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.BOT_DOCKER_USERNAME }}
          password: ${{ secrets.BOT_DOCKER_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: ./packages/orchestrator
          file: '{context}/docker/Dockerfile'
          build-args: COMMIT_SHA=${GITHUB_SHA},DESCRIPTION="The Mia-Platform micro frontend solution",VERSION=${VERSION}
          push: true
          tags: ${{ steps.prepare-docker-container.outputs.tag }}
