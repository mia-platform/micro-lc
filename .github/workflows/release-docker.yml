name: Docker container release

on:
  workflow_call:
    inputs:
      push:
        default: false
        required: false
        type: boolean
      node-version:
        default: 16.x
        required: false
        type: string
      version:
        required: true
        type: string
    secrets:
      username:
        required: true
      token:
        required: true
      security_checks_token:
        required: true

jobs:
  release-docker:
    name: Build web-server docker container
    runs-on: ubuntu-latest
    outputs:
      checksum: ${{ steps.docker-container-id.outputs.checksum }}

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ inputs.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node-version }}
          cache: yarn

      - name: Install
        run: yarn install --immutable

      - name: Build Cache
        uses: actions/cache@v3
        id: build-cache
        with:
          path: |
            ./node_modules
            ./packages/**/dist
            ./packages/**/node_modules
          key: ${{ runner.os }}-build-${{ github.sha }}

      - name: Build
        if: steps.build-cache.outputs.cache-hit != 'true'
        run: yarn initialize --cleanup orchestrator

      - name: Prepare
        id: prepare-docker-container
        run: |
          DOCKER_IMAGE=microlc/micro-lc
          echo "tag=${DOCKER_IMAGE}:${{ inputs.version }}" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.username }}
          password: ${{ secrets.token }}

      - name: Build and export to Docker
        uses: docker/build-push-action@v4
        with:
          context: ./
          file: ./.docker/Dockerfile
          build-args: |
            COMMIT_SHA=${GITHUB_SHA}
            DESCRIPTION="The Mia-Platform micro frontend solution"
            VERSION=${{ inputs.version }}
          load: true
          tags: ${{ steps.prepare-docker-container.outputs.tag }}

      - name: Test
        run: |
          echo '**CSP_NONCE**' > csp.html
          
          export CONTAINER_NAME=microlc
          docker run \
            -d \
            -p 8080:8080 \
            --name $CONTAINER_NAME \
            -v `pwd`/csp.html:/usr/static/csp.html \
            ${{ steps.prepare-docker-container.outputs.tag }}
          docker exec $CONTAINER_NAME sh -c 'curl --retry 5 --retry-max-time 120 --retry-connrefused --fail "http://0.0.0.0:8080/index.html"' > /dev/null
          export CSP=$(docker exec $CONTAINER_NAME sh -c 'curl --retry 5 --retry-max-time 120 --retry-connrefused --fail "http://0.0.0.0:8080/csp.html"')
          
          docker stop $CONTAINER_NAME
          [[ "$CSP" != "**CSP_NONCE**" ]] && exit 0 || exit 1

      - name: Build and push
        if: ${{ inputs.push }}
        uses: docker/build-push-action@v4
        with:
          context: ./
          file: ./.docker/Dockerfile
          build-args: |
            COMMIT_SHA=${GITHUB_SHA}
            DESCRIPTION="The Mia-Platform micro frontend solution"
            VERSION=${{ inputs.version }}
          push: true
          tags: ${{ steps.prepare-docker-container.outputs.tag }}

      - name: Get checksum
        id: docker-container-id
        run: |
          export DOCKER_IMAGE=microlc/micro-lc:${{ inputs.version }}
          CHECKSUM=$(docker inspect --format '{{.Id}}' $DOCKER_IMAGE)
          echo "checksum=$CHECKSUM" >> GITHUB_OUTPUT

  security-checks:
    needs:
      - release-docker
    name: Triggers security checks
    runs-on: ubuntu-latest

    steps:
      - name: Invoke API
        if: ${{ inputs.push }}
        run: |
          curl --request POST \
            --form token=${{ secrets.security_checks_token }} \
            --form ref=main \
            --form "variables[VERSION]=${{ inputs.version }}" \
            --form "variables[CHECKSUM]=${{ needs.release-docker.outputs.checksum }}" \
            "https://git.tools.mia-platform.eu/api/v4/projects/75704/trigger/pipeline"

