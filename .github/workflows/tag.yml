name: Tag CI

env:
  NPM_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

on:
  push:
    tags:
      - '@micro-lc/**'
      - 'v2**'

jobs:

  prepare:
    uses: ./.github/workflows/prepare.yml

  release-docker:
    needs:
    - prepare
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    uses: ./.github/workflows/release-docker.yml
    with:
      push: true
    secrets:
      docker_username: ${{ secrets.BOT_DOCKER_USERNAME }}
      docker_token: ${{ secrets.BOT_DOCKER_TOKEN }}
      nexus_username: ${{ secrets.NEXUS_USER }}
      nexus_token: ${{ secrets.NEXUS_TOKEN }}
      sysdig_token: ${{ secrets.SYSDIG_SECURE_TOKEN }}
      kms_gcp_project: ${{ secrets.MIA_PLATFORM_KMS_GCP_PROJECT }}
      gcp_wif: ${{ secrets.MIA_PLATFORM_WIF }}
      cosign_key: ${{ secrets.MIA_PLATFORM_KEY_KMS }}

  release-package:
    needs:
    - prepare
    name: Release Package on NPM and CDN
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/@micro-lc/') }}
    steps:
    - name: Extract Package Name
      id: package
      shell: bash
      run: |
        echo "name=$(echo ${TAG_NAME} | sed 's/^\(@micro-lc\/\)//' | sed 's/@.*$//')" >> $GITHUB_OUTPUT
      env:
        TAG_NAME: ${{ github.ref_name }}
    - name: Checkout Repository
      uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
      with:
        show-progress: false
    - name: Setup Node.js
      uses: actions/setup-node@0a44ba7841725637a19e28fa30b79a866c81b0a6 # v4.0.4
      with:
        node-version-file: .nvmrc
        check-latest: true
        cache: yarn
    - name: Install Dependencies
      run: yarn install --immutable
    - name: Download Build Artifacts
      uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
      with:
        name: packages-build
        path: packages/
    - name: Build
      run: yarn initialize --cleanup ${{ steps.package.outputs.name }}
    - name: Publish to NPM
      working-directory: ./packages/${{ steps.package.outputs.name }}
      run: yarn npm publish
    - name: Publish to Mia CDN
      working-directory: ./packages/${{ steps.package.outputs.name }}
      run: |
        yarn dlx @mia-platform/cdn-publish@0.5.0 publish -k "${CDN_KEY}" -s "mia-platform" -b 20
      env:
        CDN_KEY: ${{ secrets.CDN_STORAGE_ACCESS_KEY }}
