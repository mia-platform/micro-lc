name: Node.js fe-container CI

env:
  cache-name: cache-build
  context: ./packages/fe-container/

on:
  push:
    branches:
      - v1/main
    tags:
      - 'v1**'
  pull_request:
    branches:
      - v1/main

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x, 17.x, 18.x]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: yarn install --frozen-lockfile
    - run: yarn fe-container coverage

    - name: Compile file and build
      if: ${{ (startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/v1/main' || github.base_ref == 'v1/main') && matrix.node-version == '16.x' }}
      run: yarn fe-container build

    - name: Cache build
      if: ${{ (startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/v1/main' || github.base_ref == 'v1/main') && matrix.node-version == '16.x' }}
      uses: actions/cache@v2
      with:
        path: ${{ env.context }}build
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.sha }}

  docker-build:
    name: Build docker
    needs: test
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/v1/main' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=microlc/micro-lc
          VERSION=v1-latest
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
            VERSION=$(echo ${VERSION} | sed s/^v//)
          fi
          echo "tags=${DOCKER_IMAGE}:${VERSION}" >> $GITHUB_OUTPUT
          echo "image=${DOCKER_IMAGE}" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.BOT_DOCKER_USERNAME }}
          password: ${{ secrets.BOT_DOCKER_TOKEN }}

      - name: Cache build
        uses: actions/cache@v2
        with:
          path: ${{ env.context }}build
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.sha }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: '${{ env.context }}'
          push: true
          tags: ${{ steps.prep.outputs.tags }}
