name: Node.js be-config CI

env:
  cache-name: cache-build
  context-be: ./packages/be-config/
  context-core: ./packages/core/

on:
  push:
    branches: [ main ]
    tags: '*'
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 12.x, 14.x ]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: yarn install --frozen-lockfile
      - run: yarn be-config coverage
      - name: Coveralls
        uses: coverallsapp/github-action@master
        continue-on-error: true
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: '${{ env.context-be }}coverage/lcov.info'
          base-path: '${{ env.context-be }}'

      - name: Compile file and build
        if: ${{ (startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/main' || github.base_ref == 'main') && matrix.node-version == '14.x' }}
        run: yarn be-config build

      - name: Cache BE build
        if: ${{ (startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/main' || github.base_ref == 'main') && matrix.node-version == '14.x' }}
        uses: actions/cache@v2
        with:
          path: ${{ env.context-be }}dist
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.sha }}-be
      - name: Cache core build
        if: ${{ (startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/main' || github.base_ref == 'main') && matrix.node-version == '14.x' }}
        uses: actions/cache@v2
        with:
          path: ${{ env.context-core }}dist
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.sha }}-core

  docker-build:
    name: Build docker
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=miaplatform/microlc-config-manager
          VERSION=latest
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
            VERSION=$(echo ${VERSION} | sed s/^v//)
          elif [[ $GITHUB_REF == refs/heads/main ]]; then
            VERSION=latest
          else
            VERSION=${GITHUB_SHA#refs}
          fi
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=image::${DOCKER_IMAGE}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.BOT_DOCKER_USERNAME }}
          password: ${{ secrets.BOT_DOCKER_TOKEN }}

      - name: Cache BE build
        uses: actions/cache@v2
        with:
          path: ${{ env.context-be }}dist
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.sha }}-be
      - name: Cache core build
        uses: actions/cache@v2
        with:
          path: ${{ env.context-core }}dist
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.sha }}-core
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: './'
          file: 'packages/be-config/Dockerfile'
          pull: true
          push: true
          cache-from: type=registry,ref=${{ steps.prep.outputs.image }}:latest
          cache-to: type=inline
          tags: ${{ steps.prep.outputs.tags }}
